parameters:
  configuration: 'Release'
  performNugetPush: false

steps:
  - checkout: self
    clean: true
    fetchDepth: 1
  - task: NuGetToolInstaller@1
    displayName: Use NuGet 5.x
    inputs:
      versionSpec: 5.x
  - task: DownloadPipelineArtifact@1
    displayName: 'Download Pipeline Artifact (x86)'
    inputs:
      artifactName: 'drop-x86-${{ parameters.configuration }}'
      targetPath: '$(Build.ArtifactStagingDirectory)/drop-x86-${{ parameters.configuration }}'
  - task: DownloadPipelineArtifact@1
    displayName: 'Download Pipeline Artifact (x64)'
    inputs:
      artifactName: 'drop-x64-${{ parameters.configuration }}'
      targetPath: '$(Build.ArtifactStagingDirectory)/drop-x64-${{ parameters.configuration }}'
  - task: DownloadPipelineArtifact@1
    displayName: 'Download Pipeline Artifact (ARM)'
    inputs:
      artifactName: 'drop-ARM-${{ parameters.configuration }}'
      targetPath: '$(Build.ArtifactStagingDirectory)/drop-ARM-${{ parameters.configuration }}'
  - task: DownloadPipelineArtifact@1
    displayName: 'Download Pipeline Artifact (ARM64)'
    inputs:
      artifactName: 'drop-ARM64-${{ parameters.configuration }}'
      targetPath: '$(Build.ArtifactStagingDirectory)/drop-ARM64-${{ parameters.configuration }}'
  - powershell: Write-Host "##vso[task.setvariable variable=FullBuildVersion;]$($env:XES_SEMANTICVERSION)"
    displayName: 'Set Version information for Nuget'
  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2 # NuGetCommand@2
    name: NuGet_Pack
    displayName: 'NuGet pack'
    inputs:
      command: 'pack'
      packagesToPack: 'source/uwp/NuGet/AdaptiveCards.Rendering.Uwp.nuspec'
      versioningScheme: 'byEnvVar'
      versionEnvVar: 'FullBuildVersion'
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: Component Detection
  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2 # NuGetCommand@2
    name: NuGet_Push
    displayName: 'NuGet push'
    condition: and(succeeded(), ${{ parameters.performNugetPush }})
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/signed/*.nupkg;!$(Build.ArtifactStagingDirectory)/signed/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'NuGet.org (AdaptiveCards)'
  - task: PowerShell@1
    displayName: 'Git tag the release'
    condition: and(succeeded(), ${{ parameters.performNugetPush }})
    inputs:
      scriptType: inlineScript
      inlineScript: |
        Import-Module $env:BUILD_SOURCESDIRECTORY\scripts\AdaptiveCards.Build.psm1
        Invoke-TagRelease uwp $env:FullBuildVersion
      failOnStandardError: false
  - publish: $(Build.ArtifactStagingDirectory)/nuget
    displayName: 'Pipeline publish NuGet package'
    artifact: 'nupkg-${{ parameters.configuration }}'
